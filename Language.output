Terminals which are not used

   LPAREN
   RPAREN
   LBRACE
   RBRACE
   MODULUS
   EQUALITY
   LESS
   GREATER


State 17 conflicts: 4 shift/reduce
State 18 conflicts: 4 shift/reduce
State 19 conflicts: 4 shift/reduce
State 20 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program line NEWLINE
    2        | /* empty */

    3 line: expr NEWLINE
    4     | VAR ASSIGNMENT expr

    5 expr: INTEGER
    6     | FLOATING
    7     | VAR
    8     | expr ADDITION expr
    9     | expr SUBTRACTION expr
   10     | expr MULTIPLICATION expr
   11     | expr DIVISION expr


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN (258)
RPAREN (259)
LBRACE (260)
RBRACE (261)
NEWLINE (262) 1 3
ASSIGNMENT (263) 4
INTEGER (264) 5
FLOATING (265) 6
ADDITION (266) 8
SUBTRACTION (267) 9
MULTIPLICATION (268) 10
DIVISION (269) 11
MODULUS (270)
EQUALITY (271)
LESS (272)
GREATER (273)
VAR (274) 4 7


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
program (21)
    on left: 1 2, on right: 0 1
line (22)
    on left: 3 4, on right: 1
expr (23)
    on left: 5 6 7 8 9 10 11, on right: 3 4 8 9 10 11


state 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


state 1

    0 $accept: program . $end
    1 program: program . line NEWLINE

    $end      shift, and go to state 2
    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 5

    line  go to state 6
    expr  go to state 7


state 2

    0 $accept: program $end .

    $default  accept


state 3

    5 expr: INTEGER .

    $default  reduce using rule 5 (expr)


state 4

    6 expr: FLOATING .

    $default  reduce using rule 6 (expr)


state 5

    4 line: VAR . ASSIGNMENT expr
    7 expr: VAR .

    ASSIGNMENT  shift, and go to state 8

    $default  reduce using rule 7 (expr)


state 6

    1 program: program line . NEWLINE

    NEWLINE  shift, and go to state 9


state 7

    3 line: expr . NEWLINE
    8 expr: expr . ADDITION expr
    9     | expr . SUBTRACTION expr
   10     | expr . MULTIPLICATION expr
   11     | expr . DIVISION expr

    NEWLINE         shift, and go to state 10
    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14


state 8

    4 line: VAR ASSIGNMENT . expr

    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 15

    expr  go to state 16


state 9

    1 program: program line NEWLINE .

    $default  reduce using rule 1 (program)


state 10

    3 line: expr NEWLINE .

    $default  reduce using rule 3 (line)


state 11

    8 expr: expr ADDITION . expr

    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 15

    expr  go to state 17


state 12

    9 expr: expr SUBTRACTION . expr

    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 15

    expr  go to state 18


state 13

   10 expr: expr MULTIPLICATION . expr

    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 15

    expr  go to state 19


state 14

   11 expr: expr DIVISION . expr

    INTEGER   shift, and go to state 3
    FLOATING  shift, and go to state 4
    VAR       shift, and go to state 15

    expr  go to state 20


state 15

    7 expr: VAR .

    $default  reduce using rule 7 (expr)


state 16

    4 line: VAR ASSIGNMENT expr .
    8 expr: expr . ADDITION expr
    9     | expr . SUBTRACTION expr
   10     | expr . MULTIPLICATION expr
   11     | expr . DIVISION expr

    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14

    $default  reduce using rule 4 (line)


state 17

    8 expr: expr . ADDITION expr
    8     | expr ADDITION expr .
    9     | expr . SUBTRACTION expr
   10     | expr . MULTIPLICATION expr
   11     | expr . DIVISION expr

    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14

    ADDITION        [reduce using rule 8 (expr)]
    SUBTRACTION     [reduce using rule 8 (expr)]
    MULTIPLICATION  [reduce using rule 8 (expr)]
    DIVISION        [reduce using rule 8 (expr)]
    $default        reduce using rule 8 (expr)


state 18

    8 expr: expr . ADDITION expr
    9     | expr . SUBTRACTION expr
    9     | expr SUBTRACTION expr .
   10     | expr . MULTIPLICATION expr
   11     | expr . DIVISION expr

    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14

    ADDITION        [reduce using rule 9 (expr)]
    SUBTRACTION     [reduce using rule 9 (expr)]
    MULTIPLICATION  [reduce using rule 9 (expr)]
    DIVISION        [reduce using rule 9 (expr)]
    $default        reduce using rule 9 (expr)


state 19

    8 expr: expr . ADDITION expr
    9     | expr . SUBTRACTION expr
   10     | expr . MULTIPLICATION expr
   10     | expr MULTIPLICATION expr .
   11     | expr . DIVISION expr

    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14

    ADDITION        [reduce using rule 10 (expr)]
    SUBTRACTION     [reduce using rule 10 (expr)]
    MULTIPLICATION  [reduce using rule 10 (expr)]
    DIVISION        [reduce using rule 10 (expr)]
    $default        reduce using rule 10 (expr)


state 20

    8 expr: expr . ADDITION expr
    9     | expr . SUBTRACTION expr
   10     | expr . MULTIPLICATION expr
   11     | expr . DIVISION expr
   11     | expr DIVISION expr .

    ADDITION        shift, and go to state 11
    SUBTRACTION     shift, and go to state 12
    MULTIPLICATION  shift, and go to state 13
    DIVISION        shift, and go to state 14

    ADDITION        [reduce using rule 11 (expr)]
    SUBTRACTION     [reduce using rule 11 (expr)]
    MULTIPLICATION  [reduce using rule 11 (expr)]
    DIVISION        [reduce using rule 11 (expr)]
    $default        reduce using rule 11 (expr)
